{"version":3,"sources":["modules/Main/index.js","redux/config/helpers.js","redux/store/helpers.js","redux/store/reducers.js","redux/store/sagas.js","redux/config/store.js","redux/store/index.js","modules/Main/actions/index.js","modules/Main/constants/index.js","modules/Main/selectors/index.js","modules/Main/reducers/list.js","modules/Main/reducers/add.js","modules/Main/reducers/index.js","adapters/helpers.js","adapters/main.tsx","modules/Main/sagas/index.js","modules sync /index.js$","helpers/index.js","components/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["moduleName","getAllModules","requireContextModules","r","keys","map","key","filter","module","getAllModuleReducers","reducer","reduce","state","getAllModuleSagas","saga","getRequireContextModules","require","releaseBasedReducers","storeHelpers","combineReducers","firebase","firebaseReducer","rootSaga","all","sagas","decentralizedSagas","spawn","call","console","log","rootReducer","mySaga","reduxDevTools","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","compose","store","createStore","applyMiddleware","persistor","persistStore","run","baseStore","process","get","request","action","constants","LIST_REQUESTED","success","response","LIST_SUCCEEDED","failure","message","LIST_FAILED","add","data","ADD_REQUESTED","ADD_SUCCEEDED","ADD_FAILED","selectList","createSelector","list","initialState","statuses","isStarted","isPending","isFinished","isFailed","isSucceed","error","conf","persistentReducer","type","getProp","payload","reducers","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","FILM_COLLECTION","collection","addFilm","film","doc","id","set","getFilms","a","query","orderBy","getList","addElement","querySnapshot","forEach","snapshot","push","put","actions","addDate","Date","getTime","takeLatest","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","Object","resolve","exports","getAction","fn","defaultValue","val","isBoolean","isString","isArray","isObject","err","Search","Input","HeadDiv","styled","div","ListDiv","StyledSearch","Index","dispatch","useDispatch","useSelector","selectors","useState","rows","setRows","useEffect","useCallback","name","formatDate","d","date","isValid","format","className","placeholder","allowClear","enterButton","onSearch","title","onClick","icon","SyncOutlined","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+FAAA,4UAKA,IAAMA,EAAa,Q,4VCFNC,EAAgB,SAACC,GAC1B,IAHgBC,EAKhB,OALgBA,EAGWD,GAHHE,OAAOC,KAAI,SAACC,GAAD,OAASH,EAAEG,MAK/BC,QAAO,SAACC,GAAD,OAAYA,EAAOR,eAGhCS,EAAuB,SAACP,GAUjC,OAJuBD,EAAcC,GAAuB,GACvDK,QAAO,SAACC,GAAD,OAAYA,EAAOE,WAC1BC,QAPgB,SAACC,EAAOJ,GAAR,mBAAC,eACfI,GADc,kBAEhBJ,EAAOR,WAAaQ,EAAOE,YAKN,KAKjBG,EAAoB,SAACX,GAQ9B,OAJoBD,EAAcC,GAAuB,GACpDK,QAAO,SAACC,GAAD,OAAYA,EAAOM,QAC1BT,KALa,SAACG,GAAD,OACdA,EAAOM,SCvBFC,EAA2B,kBACpCC,Q,SCIEC,EAAuBC,EAC1BT,qBAAqBM,KAETI,cAAgB,aAC7BC,SAAUC,mBACPJ,I,oCCRMK,GAAX,SAAWA,IAAX,yEACE,OADF,SACQC,YAAIL,EAAaL,kBAAkBE,MAD3C,OAqBE,OAnBMS,EAAQN,EACXL,kBAAkBE,KAKfU,EAAqBD,EAAMnB,KAAI,SAACS,GAAD,OACnCY,YAAK,UAAC,SAAS,IAAT,iEAGA,OAHA,kBAGMC,YAAKb,GAHX,mEAOAc,QAAQC,IAAR,KAAe,uBAPf,mFATV,SAqBQN,YAAIE,GArBZ,uCAuBeH,I,ECrBA,SAACQ,EAAaC,GAA4C,IAAD,yDAAP,GAAO,IAAjCC,qBAAiC,SAC9DC,EAAiBC,cACjBC,EAAgB,CAClB7B,IAAK,OACL8B,YACAC,UAAW,IAETC,EAAmBC,YAAeJ,EAAeL,GACjDU,EACDR,GAAmC,qBAAXS,QAEjBA,OAAOC,sCACPD,OAAOC,qCAAqC,CACxCC,OAAO,KAGdC,IAEHC,EAAQC,YAAYR,EAAkBE,EAAiBO,YAAgBd,KACvEe,EAAYC,YAAaJ,GAE/B,OADAZ,EAAeiB,IAAInB,GACZ,CACHc,QACAG,aCxB4BG,CAAUrB,EFsB/BR,EEtBmD,CAChEU,cAAeoB,SADFP,E,EAAAA,MAAOG,E,EAAAA,W,iCCJtB,mGAGaK,EAAO,CAChBC,QAAS,kBACLC,YAAOC,YAAUC,iBACrBC,QAAS,SAACC,GAAD,OACLJ,YAAOC,YAAUI,eAAgB,CAACD,cACtCE,QAAS,SAACF,EAAUG,GAAX,OACLP,YAAOC,YAAUO,YAAa,CAC1BJ,WACAG,cAICE,EAAO,CAChBV,QAAS,SAACW,GAAD,OACLV,YAAOC,YAAUU,cAAe,CAACD,UACrCP,QAAS,kBACLH,YAAOC,YAAUW,gBACrBN,QAAS,SAACF,EAAUG,GAAX,OACLP,YAAOC,YAAUY,WAAY,CACzBT,WACAG,e,iCCvBZ,wRAAO,IAAML,EAAiB,sBACjBG,EAAiB,sBACjBG,EAAc,mBAEdG,EAAgB,qBAChBC,EAAgB,qBAChBC,EAAa,mB,iCCL1B,uEAGaC,EAAaC,aACxB,SAAC1D,GAAD,OAAWA,EAAMZ,iBACjB,SAACiE,GAAD,OAAUA,EAAKM,S,qGCAJC,EAAe,CACxBC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHjB,QAAS,IAEbG,KAAM,IA8CJe,EAAO,CACT1E,IAAK,OACL8B,aAGE6C,EAAoB1C,YAAeyC,GA/CrC,WAAmC,IAAlCpE,EAAiC,uDAAzB4D,EAAcjB,EAAW,uCAC9B,OAAQA,EAAO2B,MACX,KAAK1B,YAAUC,eACX,OAAO,2BACA7C,GADP,IAEI6D,SAAS,2BACF7D,EAAM6D,UADL,IAEJC,WAAW,EACXC,WAAW,MAGvB,KAAKnB,YAAUI,eACX,OAAO,2BACAhD,GADP,IAEI6D,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfb,KAAMkB,aAAQ,kBAAM5B,EAAO6B,QAAQzB,SAASM,OAAM,MAE1D,KAAKT,YAAUO,YACX,OAAO,2BACAS,GADP,IAEIC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHjB,QAASqB,aAAQ,kBAAM5B,EAAO6B,QAAQtB,UAAS,OAI3D,QACI,OAAOlD,MCtDV4D,EAAe,CACxBC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHjB,QAAS,KCXXuB,EAAW,CACfd,KFiEaU,EEhEbjB,IDcE,WAAmC,IAAlCpD,EAAiC,uDAAzB4D,EAAcjB,EAAW,uCAC9B,OAAQA,EAAO2B,MACX,KAAK1B,YAAUU,cACX,OAAO,2BACAM,GADP,IAEIC,SAAS,2BACF7D,EAAM6D,UADL,IAEJC,WAAW,EACXC,WAAW,MAGvB,KAAKnB,YAAUW,cACX,OAAO,2BACAvD,GADP,IAEI6D,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,KAGvB,KAAKtB,YAAUY,WACX,OAAO,2BACAI,GADP,IAEIC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHjB,QAASqB,aAAQ,kBAAM5B,EAAO6B,QAAQtB,UAAS,OAI3D,QACI,OAAOlD,KCjDjBkB,EAAcX,YAAgBkE,GACrBvD,a,kOCGfV,IAASkE,cAVc,CACnBC,OAAQnC,0CACRoC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAICzE,IAAS0E,OAAtB,IACMC,EAAY3E,IAAS2E,YCb5BC,EAAkBD,EAAUE,WAAW,SAEtC,SAASC,EAAQjC,GAIpB,IAAIkC,EAAOH,EAAgBI,MAE3B,OADAnC,EAAKoC,GAAKF,EAAKE,GACRF,EAAKG,IAAIrC,GAGb,SAAesC,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACCC,EAAaV,EAAUE,WAAW,SADnC,kBAEIQ,EAAMC,QAAQ,UAAW,QAAQrD,OAFrC,4C,qCCTUsD,G,WAgBAC,G,cAhBV,SAAUD,IAAV,6EAEuB,OAFvB,kBAE6BhF,YAAK4E,GAFlC,OAOC,OALMM,EAFP,OAGO5C,EAAO,GACb4C,EAAcC,SAAQ,SAACC,GACnB9C,EAAK+C,KAAKD,EAAS9C,WALxB,SAOOgD,YAAIC,UAAQ7D,IAAIK,QAAQ,CAC1BO,UARL,+BAYC,OAZD,0BAWQN,EAXR,KAWQA,SAAUG,EAXlB,KAWkBA,QAXlB,UAYOmD,YAAIC,UAAQ7D,IAAIQ,QAAQF,EAAUG,IAZzC,sDAgBA,SAAU8C,EAAWrD,GAArB,2EAGC,OAFGU,EAAQV,EAAO6B,QAAfnB,KADJ,kBAGOtC,YAAKuE,EAAD,YAAC,eACJjC,GADG,IAENkD,SAAU,IAAIC,MAAOC,aAL1B,OAOC,OAPD,SAOO9F,YAAI,CACN0F,YAAIC,UAAQlD,IAAIN,WAChBuD,YAAIC,UAAQ7D,IAAIC,aATrB,8BAaC,OAbD,yBAYQK,EAZR,KAYQA,SAAUG,EAZlB,KAYkBA,QAZlB,UAaOmD,YAAIC,UAAQlD,IAAIH,QAAQF,EAAUG,IAbzC,qDAiBQ,8EACX,OADW,SACLwD,YAAW9D,YAAUC,eAAgBkD,GADhC,OAEX,OAFW,SAELW,YAAW9D,YAAUU,cAAe0C,GAF/B,yC,gECrCf,IAAIvG,EAAM,CACT,0BAA2B,IAC3B,4BAA6B,IAC7B,kBAAmB,GACnB,2BAA4B,IAC5B,wBAAyB,IACzB,4BAA6B,KAI9B,SAASkH,EAAeC,GACvB,IAAInB,EAAKoB,EAAsBD,GAC/B,OAAOE,EAAoBrB,GAE5B,SAASoB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEtH,EAAKmH,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAOvH,EAAImH,GAEZD,EAAenH,KAAO,WACrB,OAAO2H,OAAO3H,KAAKC,IAEpBkH,EAAeS,QAAUP,EACzBjH,EAAOyH,QAAUV,EACjBA,EAAelB,GAAK,K,gCC3BpB,gFAOa6B,EAAY,SAAChD,GAAD,IAAOE,EAAP,uDAAiB,GAAjB,MACpB,CACGF,OACAE,YAIKD,EAAU,SAACgD,EAAIC,GACxB,IACI,IAAMC,EAAMF,IACZ,OAAIG,oBAAUF,KAAkBE,oBAAUD,KAGtCE,mBAASH,KAAkBG,mBAASF,IAGpCG,kBAAQJ,KAAkBI,kBAAQH,IAGlCI,mBAASL,KAAkBK,mBAASJ,IAR7BD,EAWJC,GAAOD,EAChB,MAAOM,GACL,OAAON,K,+NCpBRO,EAAUC,IAAVD,OAEDE,EAAUC,IAAOC,IAAV,kHAOPC,EAAUF,IAAOC,IAAV,8MASPE,EAAeH,YAAOH,EAAPG,CAAH,6CAwDHI,EAnDD,WACV,IAAMC,EAAWC,cACX7E,EAAO8E,YAAYC,YAAUjF,YAFnB,EAGQkF,mBAAS,IAHjB,mBAGTC,EAHS,KAGHC,EAHG,KAKhBC,qBAAU,WACND,EAAQlF,EAAKN,QACd,CAACM,IAEJmF,qBAAU,WACNP,EAASjC,UAAQ7D,IAAIC,aACtB,CAAC6F,IAEJ,IAAMjD,EAAUyD,uBAAY,SAACC,GACzBT,EAASjC,UAAQlD,IAAIV,QAAQ,CAACsG,YAC/B,CAACT,IAEEU,EAAa,SAACC,GAChB,IAAMC,EAAO,IAAI3C,KAAK0C,GACtB,OAAIE,YAAQD,GACDE,YAAOF,EAAM,4BAEjB,aAGX,OACI,sBAAKG,UAAU,MAAf,UACI,eAACrB,EAAD,WACI,cAACI,EAAD,CACIkB,YAAY,WACZC,YAAU,EACVC,YAAY,MACZC,SAAUpE,IAEd,cAAC,IAAD,CAASqE,MAAM,SAAf,SACI,cAAC,IAAD,CAAQrF,KAAK,UAAUsF,QAAS,WAC5BrB,EAASjC,UAAQ7D,IAAIC,YAEjBmH,KAAM,cAACC,EAAA,EAAD,WAGtB,uBAfJ,OAiBQlB,QAjBR,IAiBQA,OAjBR,EAiBQA,EAAMnJ,KAAI,SAACF,GAAD,OAAsD,eAAC6I,EAAD,WAC5D,+BAAOa,EAAW1J,EAAEgH,WADwC,IACvB,+BAAOhH,EAAEyJ,SAD4BzJ,EAAEkG,W,kBC7CjFsE,G,OAnBH,WACR,OACI,cAAC,IAAD,CAAU9H,MAAOA,QAAjB,SACI,cAAC,IAAD,CAAiBG,UAAWA,YAA5B,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4H,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,EAAD,iBCTbC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.466b7035.chunk.js","sourcesContent":["import * as actions from './actions'\nimport * as constants from './constants'\nimport reducer from './reducers'\nimport saga from './sagas'\nimport * as selectors from './selectors'\nconst moduleName = 'Main'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n  saga\n}\n","\nconst allModules = (r) => r.keys().map((key) => r(key))\n\nexport const getAllModules = (requireContextModules) => {\n    const modules = allModules(requireContextModules)\n\n    return modules.filter((module) => module.moduleName)\n}\n\nexport const getAllModuleReducers = (requireContextModules) => {\n    const buildReducer = (state, module) => ({\n        ...state,\n        [module.moduleName]: module.reducer\n    })\n\n    const moduleReducers = getAllModules(requireContextModules, true)\n        .filter((module) => module.reducer)\n        .reduce(buildReducer, {})\n\n    return moduleReducers\n}\n\nexport const getAllModuleSagas = (requireContextModules) => {\n    const buildSaga = (module) =>\n        module.saga\n\n    const moduleSagas = getAllModules(requireContextModules, false)\n        .filter((module) => module.saga)\n        .map(buildSaga)\n\n    return moduleSagas\n}\n","\nexport const getRequireContextModules = () =>\n    require.context('../../modules/', true, /index.js$/)\n\nexport const getStore = () => {\n    const { store } = require('../store')\n    return {\n        state: store.getState(),\n        dispatch: store.dispatch\n    }\n}\n","import { combineReducers } from 'redux'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst releaseBasedReducers = storeHelpers\n  .getAllModuleReducers(getRequireContextModules())\n\nexport default combineReducers({\n  firebase: firebaseReducer,\n  ...releaseBasedReducers\n})\n","import { all, spawn, call } from 'redux-saga/effects'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nfunction * rootSaga () {\n  yield all(storeHelpers.getAllModuleSagas(getRequireContextModules()))\n  const sagas = storeHelpers\n    .getAllModuleSagas(getRequireContextModules())\n  /*\n   * Keeping the root alive\n   * ref: https://redux-saga.js.org/docs/advanced/RootSaga.html\n   */\n  const decentralizedSagas = sagas.map((saga) =>\n    spawn(function * () {\n      while (true) {\n        try {\n          yield call(saga)\n          break\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.log(e, 'Saga crash detected')\n        }\n      }\n    })\n  )\n  yield all(decentralizedSagas)\n}\nexport default rootSaga\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\nimport storage from 'redux-persist/lib/storage'\n\nexport default (rootReducer, mySaga, { reduxDevTools = false } = {}) => {\n    const sagaMiddleware = createSagaMiddleware()\n    const persistConfig = {\n        key: 'root',\n        storage,\n        whitelist: []\n    }\n    const persistedReducer = persistReducer(persistConfig, rootReducer)\n    const composeEnhancers =\n        (reduxDevTools && typeof window !== 'undefined' &&\n            (\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    trace: true\n                })\n            )\n        ) || compose\n\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\n    const persistor = persistStore(store)\n    sagaMiddleware.run(mySaga)\n    return {\n        store,\n        persistor\n    }\n}\n","import { store as baseStore } from '../config'\nimport rootReducer from './reducers'\nimport sagas from './sagas'\n\nexport const { store, persistor } = baseStore(rootReducer, sagas, {\n  reduxDevTools: process.env.REACT_APP_REDUX_DEVTOOLS\n})\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const get = ({\n    request: () =>\n        action(constants.LIST_REQUESTED),\n    success: (response) =>\n        action(constants.LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const add = ({\n    request: (data) =>\n        action(constants.ADD_REQUESTED, {data}),\n    success: () =>\n        action(constants.ADD_SUCCEEDED),\n    failure: (response, message) =>\n        action(constants.ADD_FAILED, {\n            response,\n            message\n        })\n})\n","export const LIST_REQUESTED = 'MAIN/LIST_REQUESTED'\nexport const LIST_SUCCEEDED = 'MAIN/LIST_SUCCEEDED'\nexport const LIST_FAILED = 'MAIN/LIST_FAILED'\n\nexport const ADD_REQUESTED = 'MAIN/ADD_REQUESTED'\nexport const ADD_SUCCEEDED = 'MAIN/ADD_SUCCEEDED'\nexport const ADD_FAILED = 'MAIN/ADD_FAILED'\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\nexport const selectList = createSelector(\n  (state) => state[moduleName],\n  (data) => data.list\n)\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants, selectors} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_REQUESTED:\n                return {\n                    ...state,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'list',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants, selectors} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    }\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.ADD_REQUESTED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.ADD_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                }\n            case constants.ADD_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport list from './list'\nimport add from './add'\n\nconst reducers = {\n  list,\n  add\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: \"films-77573.firebaseapp.com\",\n    projectId: \"films-77573\",\n    storageBucket: \"films-77573.appspot.com\",\n    messagingSenderId: \"691827665866\",\n    appId: \"1:691827665866:web:fe04b91804f8ca6e637d33\",\n    measurementId: \"G-RS9CM5BC29\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import {firestore} from \"./helpers\"\n\nconst FILM_COLLECTION = firestore.collection(\"films\")\n\nexport function addFilm(data: {\n    id?: string;\n    name: string\n}) {\n    let film = FILM_COLLECTION.doc()\n    data.id = film.id\n    return film.set(data)\n}\n\nexport async function getFilms() {\n    let query: any = firestore.collection(\"films\")\n    return query.orderBy('addDate', 'desc').get()\n}\n","import {all, call, put, takeLatest} from 'redux-saga/effects'\nimport {actions, constants} from '../index'\nimport {addFilm, getFilms} from '../../../adapters/main'\n\nexport function* getList() {\n    try {\n        const querySnapshot = yield call(getFilms)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.get.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.get.failure(response, message))\n    }\n}\n\nexport function* addElement(action) {\n    const {data} = action.payload\n    try {\n        yield call(addFilm, {\n            ...data,\n            addDate: (new Date().getTime())\n        })\n        yield all([\n            put(actions.add.success()),\n            put(actions.get.request()),\n        ])\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.add.failure(response, message))\n    }\n}\n\nexport default function* () {\n    yield takeLatest(constants.LIST_REQUESTED, getList)\n    yield takeLatest(constants.ADD_REQUESTED, addElement)\n}\n","var map = {\n\t\"./Main/actions/index.js\": 131,\n\t\"./Main/constants/index.js\": 132,\n\t\"./Main/index.js\": 11,\n\t\"./Main/reducers/index.js\": 169,\n\t\"./Main/sagas/index.js\": 170,\n\t\"./Main/selectors/index.js\": 134\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 304;","import {\n    isBoolean,\n    isString,\n    isArray,\n    isObject\n} from 'lodash'\n\nexport const getAction = (type, payload = {}) =>\n    ({\n        type,\n        payload\n    })\n\n// https://stackoverflow.com/a/42349521\nexport const getProp = (fn, defaultValue) => {\n    try {\n        const val = fn()\n        if (isBoolean(defaultValue) && !isBoolean(val)) {\n            return defaultValue\n        }\n        if (isString(defaultValue) && !isString(val)) {\n            return defaultValue\n        }\n        if (isArray(defaultValue) && !isArray(val)) {\n            return defaultValue\n        }\n        if (isObject(defaultValue) && !isObject(val)) {\n            return defaultValue\n        }\n        return val || defaultValue\n    } catch (err) {\n        return defaultValue\n    }\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport '../../App.css';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {actions, selectors} from '../../modules/Main'\nimport {\n    SyncOutlined,\n} from '@ant-design/icons';\nimport styled from \"styled-components\";\nimport {format, isValid} from 'date-fns'\nimport {Button, Tooltip, Input} from \"antd\";\n\nconst {Search} = Input;\n\nconst HeadDiv = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ListDiv = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: .5rem .5rem .25rem;\n  border-bottom: 1px dashed gray;\n`;\nconst StyledSearch = styled(Search)`\n  width: 250px;\n`;\n\n\nconst Index = () => {\n    const dispatch = useDispatch()\n    const list = useSelector(selectors.selectList)\n    const [rows, setRows] = useState([])\n\n    useEffect(() => {\n        setRows(list.data)\n    }, [list])\n\n    useEffect(() => {\n        dispatch(actions.get.request())\n    }, [dispatch]);\n\n    const addFilm = useCallback((name) => {\n        dispatch(actions.add.request({name}))\n    }, [dispatch])\n\n    const formatDate = (d: number) => {\n        const date = new Date(d)\n        if (isValid(date)) {\n            return format(date, \"yyyy.MM.dd 'at' HH:mm:ss\")\n        }\n        return 'undefined'\n    }\n\n    return (\n        <div className=\"App\">\n            <HeadDiv>\n                <StyledSearch\n                    placeholder=\"add name\"\n                    allowClear\n                    enterButton=\"Add\"\n                    onSearch={addFilm}\n                />\n                <Tooltip title=\"search\">\n                    <Button type=\"primary\" onClick={() => {\n                        dispatch(actions.get.request())\n                    }}\n                            icon={<SyncOutlined/>}/>\n                </Tooltip>\n            </HeadDiv>\n            <hr/>\n            {\n                rows?.map((r: { addDate: number, name: string, id: string }) => <ListDiv key={r.id}>\n                    <span>{formatDate(r.addDate)}</span> <span>{r.name}</span>\n                </ListDiv>)\n            }\n        </div>\n    );\n}\n\nexport default Index;\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Main from './components/main'\nimport {store, persistor} from './redux/store'\nimport {PersistGate as BasePersistGate} from 'redux-persist/integration/react'\nimport 'antd/dist/antd.css';\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <BasePersistGate persistor={persistor}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <Main/>\n                        </Route>\n                        <Route path=\"/main\" exact>\n                            <Main/>\n                        </Route>\n                    </Switch>\n                </Router>\n            </BasePersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Input} from \"antd\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}