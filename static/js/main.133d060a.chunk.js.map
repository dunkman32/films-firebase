{"version":3,"sources":["modules/Main/reducers/list.js","modules/Main/reducers/add.js","modules/Main/reducers/index.js","adapters/helpers.js","adapters/main.tsx","modules/Main/sagas/index.js","modules sync /index.js$","helpers/index.js","components/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","modules/Main/index.js","redux/config/helpers.js","redux/store/helpers.js","redux/store/reducers.js","redux/store/sagas.js","redux/config/store.js","redux/store/index.js","modules/Main/actions/index.js","modules/Main/constants/index.js","modules/Main/selectors/index.js"],"names":["initialState","statuses","isStarted","isPending","isFinished","isFailed","isSucceed","error","message","data","conf","key","storage","persistentReducer","persistReducer","state","action","type","constants","LIST_REQUESTED","LIST_SUCCEEDED","getProp","payload","response","LIST_FAILED","reducers","list","add","ADD_REQUESTED","ADD_SUCCEEDED","ADD_FAILED","rootReducer","combineReducers","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","FILM_COLLECTION","collection","addFilm","film","doc","id","set","getFilms","a","query","get","getList","addElement","call","querySnapshot","forEach","snapshot","push","put","actions","success","failure","all","request","takeLatest","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","getAction","fn","defaultValue","val","isBoolean","isString","isArray","isObject","err","Index","dispatch","useDispatch","useSelector","selectors","selectList","useState","name","setName","rows","setRows","useEffect","useCallback","className","onChange","target","value","onClick","r","App","store","persistor","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","moduleName","getAllModules","requireContextModules","filter","getAllModuleReducers","reducer","reduce","getAllModuleSagas","saga","getRequireContextModules","require","releaseBasedReducers","storeHelpers","firebaseReducer","rootSaga","sagas","decentralizedSagas","spawn","console","log","mySaga","reduxDevTools","sagaMiddleware","createSagaMiddleware","persistConfig","whitelist","persistedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","compose","createStore","applyMiddleware","persistStore","run","baseStore","process","REDUX_DEVTOOLS","createSelector"],"mappings":"mKAMaA,EAAe,CACxBC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHC,QAAS,IAEbC,KAAM,IA8CJC,EAAO,CACTC,IAAK,OACLC,aAKWC,EAFWC,YAAeJ,GA/CrC,WAAmC,IAAlCK,EAAiC,uDAAzBf,EAAcgB,EAAW,uCAC9B,OAAQA,EAAOC,MACX,KAAKC,YAAUC,eACX,OAAO,2BACAnB,GADP,IAEIC,SAAS,2BACFc,EAAMd,UADL,IAEJC,WAAW,EACXC,WAAW,MAGvB,KAAKe,YAAUE,eACX,OAAO,2BACAL,GADP,IAEId,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfG,KAAMY,aAAQ,kBAAML,EAAOM,QAAQC,SAASd,OAAM,MAE1D,KAAKS,YAAUM,YACX,OAAO,2BACAxB,GADP,IAEIC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHC,QAASa,aAAQ,kBAAML,EAAOM,QAAQd,UAAS,OAI3D,QACI,OAAOO,MCtDVf,EAAe,CACxBC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHC,QAAS,KA8CXE,EAAO,CACTC,IAAK,OACLC,aC3DEa,EAAW,CACfC,OACAC,ID4DwBb,YAAeJ,GA9CrC,WAAmC,IAAlCK,EAAiC,uDAAzBf,EAAcgB,EAAW,uCAC9B,OAAQA,EAAOC,MACX,KAAKC,YAAUU,cACX,OAAO,2BACA5B,GADP,IAEIC,SAAS,2BACFc,EAAMd,UADL,IAEJC,WAAW,EACXC,WAAW,MAGvB,KAAKe,YAAUW,cACX,OAAO,2BACAd,GADP,IAEId,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,KAGvB,KAAKY,YAAUY,WACX,OAAO,2BACA9B,GADP,IAEIC,SAAU,CACNC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,WAAW,GAEfC,MAAO,CACHC,QAASa,aAAQ,kBAAML,EAAOM,QAAQd,UAAS,OAI3D,QACI,OAAOO,OCjDjBgB,EAAcC,YAAgBP,GACrBM,a,wNCGfE,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAICR,IAASS,OAAtB,IACMC,EAAYV,IAASU,YCb5BC,EAAkBD,EAAUE,WAAW,SAEtC,SAASC,EAAQrC,GAIpB,IAAIsC,EAAOH,EAAgBI,MAE3B,OADAvC,EAAKwC,GAAKF,EAAKE,GACRF,EAAKG,IAAIzC,GAGb,SAAe0C,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DACCC,EAAaV,EAAUE,WAAW,SADnC,kBAEIQ,EAAMC,OAFV,4C,qCCTUC,G,WAgBAC,G,cAhBV,SAAUD,IAAV,6EAEuB,OAFvB,kBAE6BE,YAAKN,GAFlC,OAOC,OALMO,EAFP,OAGOjD,EAAO,GACbiD,EAAcC,SAAQ,SAACC,GACnBnD,EAAKoD,KAAKD,EAASnD,WALxB,SAOOqD,YAAIC,UAAQT,IAAIU,QAAQ,CAC1BvD,UARL,+BAYC,OAZD,0BAWQc,EAXR,KAWQA,SAAUf,EAXlB,KAWkBA,QAXlB,UAYOsD,YAAIC,UAAQT,IAAIW,QAAQ1C,EAAUf,IAZzC,sDAgBA,SAAUgD,EAAWxC,GAArB,2EAGC,OAFGP,EAAQO,EAAOM,QAAfb,KADJ,kBAGOgD,YAAKX,EAASrC,GAHrB,OAIC,OAJD,SAIOyD,YAAI,CACNJ,YAAIC,UAAQpC,IAAIqC,WAChBF,YAAIC,UAAQT,IAAIa,aANrB,8BAUC,OAVD,yBASQ5C,EATR,KASQA,SAAUf,EATlB,KASkBA,QATlB,UAUOsD,YAAIC,UAAQpC,IAAIsC,QAAQ1C,EAAUf,IAVzC,qDAcQ,8EACX,OADW,SACL4D,YAAWlD,YAAUC,eAAgBoC,GADhC,OAEX,OAFW,SAELa,YAAWlD,YAAUU,cAAe4B,GAF/B,yC,gEClCf,IAAIa,EAAM,CACT,0BAA2B,GAC3B,4BAA6B,GAC7B,kBAAmB,EACnB,2BAA4B,IAC5B,wBAAyB,IACzB,4BAA6B,IAI9B,SAASC,EAAeC,GACvB,IAAItB,EAAKuB,EAAsBD,GAC/B,OAAOE,EAAoBxB,GAE5B,SAASuB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAON,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUR,EACzBS,EAAOC,QAAUZ,EACjBA,EAAerB,GAAK,K,gCC3BpB,gFAOakC,EAAY,SAAClE,GAAD,IAAOK,EAAP,uDAAiB,GAAjB,MACpB,CACGL,OACAK,YAIKD,EAAU,SAAC+D,EAAIC,GACxB,IACI,IAAMC,EAAMF,IACZ,OAAIG,oBAAUF,KAAkBE,oBAAUD,KAGtCE,mBAASH,KAAkBG,mBAASF,IAGpCG,kBAAQJ,KAAkBI,kBAAQH,IAGlCI,mBAASL,KAAkBK,mBAASJ,IAR7BD,EAWJC,GAAOD,EAChB,MAAOM,GACL,OAAON,K,gJCOAO,EAlCD,WACV,IAAMC,EAAWC,cACXpE,EAAOqE,YAAYC,YAAUC,YAFnB,EAGQC,mBAAS,IAHjB,mBAGTC,EAHS,KAGHC,EAHG,OAIQF,mBAAS,IAJjB,mBAITG,EAJS,KAIHC,EAJG,KAMhBC,qBAAU,WACND,EAAQ5E,EAAKjB,QACd,CAACiB,IAEJ6E,qBAAU,WACNV,EAAS9B,UAAQT,IAAIa,aACtB,IAEH,IAAMrB,EAAU0D,uBAAY,WACxBX,EAAS9B,UAAQpC,IAAIwC,QAAQ,CAACgC,YAC/B,CAACA,IAEJ,OACI,sBAAKM,UAAU,MAAf,UACI,uBACA,uBAAOxF,KAAK,OAAOyF,SAAU,SAAC/B,GAAD,OAAOyB,EAAQzB,EAAEgC,OAAOC,UACrD,wBAAQC,QAAS/D,EAAjB,6BACA,uBAJJ,OAMQuD,QANR,IAMQA,OANR,EAMQA,EAAMhC,KAAI,SAACyC,GAAD,OAAqC,gCAC3C,+BAAOA,EAAE7D,KADkC,MACrB,+BAAO6D,EAAEX,OAC/B,yBAFqDW,EAAE7D,W,iBCG5D8D,EAnBH,WACR,OACI,cAAC,IAAD,CAAUC,MAAOA,QAAjB,SACI,cAAC,IAAD,CAAiBC,UAAWA,YAA5B,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,EAAzB,SACI,cAAC,EAAD,gBCTbC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,+BChBA,yUAKA,IAAMc,EAAa,Q,0VCFNC,EAAgB,SAACC,GAC1B,IAHgBtB,EAKhB,OALgBA,EAGWsB,GAHHtD,OAAOT,KAAI,SAAC1D,GAAD,OAASmG,EAAEnG,MAK/B0H,QAAO,SAACpD,GAAD,OAAYA,EAAOiD,eAGhCI,EAAuB,SAACF,GAUjC,OAJuBD,EAAcC,GAAuB,GACvDC,QAAO,SAACpD,GAAD,OAAYA,EAAOsD,WAC1BC,QAPgB,SAACzH,EAAOkE,GAAR,mBAAC,eACflE,GADc,kBAEhBkE,EAAOiD,WAAajD,EAAOsD,YAKN,KAKjBE,EAAoB,SAACL,GAQ9B,OAJoBD,EAAcC,GAAuB,GACpDC,QAAO,SAACpD,GAAD,OAAYA,EAAOyD,QAC1BrE,KALa,SAACY,GAAD,OACdA,EAAOyD,SCvBFC,EAA2B,kBACpCC,Q,SCIEC,EAAuBC,EAC1BR,qBAAqBK,KAET3G,cAAgB,aAC7BC,SAAU8G,mBACPF,I,oCCRMG,GAAX,SAAWA,IAAX,yEACE,OADF,SACQ9E,YAAI4E,EAAaL,kBAAkBE,MAD3C,OAqBE,OAnBMM,EAAQH,EACXL,kBAAkBE,KAKfO,EAAqBD,EAAM5E,KAAI,SAACqE,GAAD,OACnCS,YAAK,UAAC,SAAS,IAAT,iEAGA,OAHA,kBAGM1F,YAAKiF,GAHX,mEAOAU,QAAQC,IAAR,KAAe,uBAPf,mFATV,SAqBQnF,YAAIgF,GArBZ,uCAuBeF,I,ECrBA,SAACjH,EAAauH,GAA4C,IAAD,yDAAP,GAAO,IAAjCC,qBAAiC,SAC9DC,EAAiBC,cACjBC,EAAgB,CAClB/I,IAAK,OACLC,YACA+I,UAAW,IAETC,EAAmB9I,YAAe4I,EAAe3H,GACjD8H,EACDN,GAAmC,qBAAXO,QAEjBA,OAAOC,sCACPD,OAAOC,qCAAqC,CACxCC,OAAO,KAGdC,IAEHjD,EAAQkD,YAAYN,EAAkBC,EAAiBM,YAAgBX,KACvEvC,EAAYmD,YAAapD,GAE/B,OADAwC,EAAea,IAAIf,GACZ,CACHtC,QACAC,aCxB4BqD,CAAUvI,EFsB/BiH,EEtBmD,CAChEO,cAAegB,kJAAYC,iBADdxD,E,EAAAA,MAAOC,E,EAAAA,W,gCCJtB,kGAGa3D,EAAO,CAChBa,QAAS,kBACLnD,YAAOE,YAAUC,iBACrB6C,QAAS,SAACzC,GAAD,OACLP,YAAOE,YAAUE,eAAgB,CAACG,cACtC0C,QAAS,SAAC1C,EAAUf,GAAX,OACLQ,YAAOE,YAAUM,YAAa,CAC1BD,WACAf,cAICmB,EAAO,CAChBwC,QAAS,SAAC1D,GAAD,OACLO,YAAOE,YAAUU,cAAe,CAACnB,UACrCuD,QAAS,kBACLhD,YAAOE,YAAUW,gBACrBoC,QAAS,SAAC1C,EAAUf,GAAX,OACLQ,YAAOE,YAAUY,WAAY,CACzBP,WACAf,e,gCCvBZ,wRAAO,IAAMW,EAAiB,sBACjBC,EAAiB,sBACjBI,EAAc,mBAEdI,EAAgB,qBAChBC,EAAgB,qBAChBC,EAAa,mB,gCCL1B,sEAIamE,EAAawE,aACxB,SAAC1J,GAAD,OAAWA,EAAMmH,iBACjB,SAACzH,GAAD,OAAUA,EAAKiB,U","file":"static/js/main.133d060a.chunk.js","sourcesContent":["import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants, selectors} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    },\n    data: []\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.LIST_REQUESTED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.LIST_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                    data: getProp(() => action.payload.response.data, [])\n                }\n            case constants.LIST_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'main',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import storage from 'redux-persist/lib/storage'\nimport {persistReducer} from 'redux-persist'\nimport {constants, selectors} from '../index'\nimport {getProp} from '../../../helpers'\n\n\nexport const initialState = {\n    statuses: {\n        isStarted: false,\n        isPending: false,\n        isFinished: false,\n        isFailed: false,\n        isSucceed: false\n    },\n    error: {\n        message: ''\n    }\n}\n\nconst reducer =\n    (state = initialState, action) => {\n        switch (action.type) {\n            case constants.ADD_REQUESTED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        ...state.statuses,\n                        isStarted: true,\n                        isPending: true,\n                    },\n                }\n            case constants.ADD_SUCCEEDED:\n                return {\n                    ...state,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: false,\n                        isSucceed: true\n                    },\n                }\n            case constants.ADD_FAILED:\n                return {\n                    ...initialState,\n                    statuses: {\n                        isStarted: false,\n                        isPending: false,\n                        isFinished: true,\n                        isFailed: true,\n                        isSucceed: false\n                    },\n                    error: {\n                        message: getProp(() => action.payload.message, '')\n                    }\n                }\n\n            default:\n                return state\n        }\n    }\nconst conf = {\n    key: 'main',\n    storage\n}\n\nconst persistentReducer = persistReducer(conf, reducer)\n\nexport default persistentReducer\n","import { combineReducers } from 'redux'\nimport list from './list'\nimport add from './add'\n\nconst reducers = {\n  list,\n  add\n}\n\nconst rootReducer = combineReducers(reducers)\nexport default rootReducer\n","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDU2aOroAgqeKemO6qdFCaRSl60PqFC5mM\",\n    authDomain: \"films-77573.firebaseapp.com\",\n    projectId: \"films-77573\",\n    storageBucket: \"films-77573.appspot.com\",\n    messagingSenderId: \"691827665866\",\n    appId: \"1:691827665866:web:fe04b91804f8ca6e637d33\",\n    measurementId: \"G-RS9CM5BC29\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import {firestore} from \"./helpers\"\n\nconst FILM_COLLECTION = firestore.collection(\"films\")\n\nexport function addFilm(data: {\n    id?: string;\n    name: string\n}) {\n    let film = FILM_COLLECTION.doc()\n    data.id = film.id\n    return film.set(data)\n}\n\nexport async function getFilms() {\n    let query: any = firestore.collection(\"films\")\n    return query.get()\n}\n","import {call, all, put, takeLatest} from 'redux-saga/effects'\nimport {actions, constants} from '../index'\nimport {getFilms, addFilm} from '../../../adapters/main'\n\nexport function* getList() {\n    try {\n        const querySnapshot = yield call(getFilms)\n        const data = []\n        querySnapshot.forEach((snapshot) => {\n            data.push(snapshot.data())\n        })\n        yield put(actions.get.success({\n            data\n        }))\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.get.failure(response, message))\n    }\n}\n\nexport function* addElement(action) {\n    const {data} = action.payload\n    try {\n        yield call(addFilm, data)\n        yield all([\n            put(actions.add.success()),\n            put(actions.get.request()),\n        ])\n    } catch (e) {\n        const {response, message} = e\n        yield put(actions.add.failure(response, message))\n    }\n}\n\nexport default function* () {\n    yield takeLatest(constants.LIST_REQUESTED, getList)\n    yield takeLatest(constants.ADD_REQUESTED, addElement)\n}\n","var map = {\n\t\"./Main/actions/index.js\": 89,\n\t\"./Main/constants/index.js\": 90,\n\t\"./Main/index.js\": 7,\n\t\"./Main/reducers/index.js\": 126,\n\t\"./Main/sagas/index.js\": 127,\n\t\"./Main/selectors/index.js\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 222;","import {\n    isBoolean,\n    isString,\n    isArray,\n    isObject\n} from 'lodash'\n\nexport const getAction = (type, payload = {}) =>\n    ({\n        type,\n        payload\n    })\n\n// https://stackoverflow.com/a/42349521\nexport const getProp = (fn, defaultValue) => {\n    try {\n        const val = fn()\n        if (isBoolean(defaultValue) && !isBoolean(val)) {\n            return defaultValue\n        }\n        if (isString(defaultValue) && !isString(val)) {\n            return defaultValue\n        }\n        if (isArray(defaultValue) && !isArray(val)) {\n            return defaultValue\n        }\n        if (isObject(defaultValue) && !isObject(val)) {\n            return defaultValue\n        }\n        return val || defaultValue\n    } catch (err) {\n        return defaultValue\n    }\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport '../../App.css';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {actions, selectors} from '../../modules/Main'\nconst Index = () => {\n    const dispatch = useDispatch()\n    const list = useSelector(selectors.selectList)\n    const [name, setName] = useState('')\n    const [rows, setRows] = useState([])\n\n    useEffect(() => {\n        setRows(list.data)\n    }, [list])\n\n    useEffect(() => {\n        dispatch(actions.get.request())\n    }, []);\n\n    const addFilm = useCallback(() => {\n        dispatch(actions.add.request({name}))\n    }, [name])\n\n    return (\n        <div className=\"App\">\n            <hr/>\n            <input type=\"text\" onChange={(e) => setName(e.target.value)}/>\n            <button onClick={addFilm}> Click to Fetch</button>\n            <hr/>\n            {\n                rows?.map((r: { id: string, name: string }) => <div key={r.id}>\n                    <span>{r.id}</span> - <span>{r.name}</span>\n                    <hr/>\n                </div>)\n            }\n        </div>\n    );\n}\n\nexport default Index;\n","import React from 'react';\nimport {Provider} from 'react-redux'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Main from './components/main'\nimport {store, persistor} from './redux/store'\nimport {PersistGate as BasePersistGate} from 'redux-persist/integration/react'\n\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <BasePersistGate persistor={persistor}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" exact>\n                            <Main/>\n                        </Route>\n                        <Route path=\"/main\" exact>\n                            <Main/>\n                        </Route>\n                    </Switch>\n                </Router>\n            </BasePersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as actions from './actions'\nimport * as constants from './constants'\nimport reducer from './reducers'\nimport saga from './sagas'\nimport * as selectors from './selectors'\nconst moduleName = 'Main'\n\nexport {\n  moduleName,\n  reducer,\n  actions,\n  selectors,\n  constants,\n  saga\n}\n","\nconst allModules = (r) => r.keys().map((key) => r(key))\n\nexport const getAllModules = (requireContextModules) => {\n    const modules = allModules(requireContextModules)\n\n    return modules.filter((module) => module.moduleName)\n}\n\nexport const getAllModuleReducers = (requireContextModules) => {\n    const buildReducer = (state, module) => ({\n        ...state,\n        [module.moduleName]: module.reducer\n    })\n\n    const moduleReducers = getAllModules(requireContextModules, true)\n        .filter((module) => module.reducer)\n        .reduce(buildReducer, {})\n\n    return moduleReducers\n}\n\nexport const getAllModuleSagas = (requireContextModules) => {\n    const buildSaga = (module) =>\n        module.saga\n\n    const moduleSagas = getAllModules(requireContextModules, false)\n        .filter((module) => module.saga)\n        .map(buildSaga)\n\n    return moduleSagas\n}\n","\nexport const getRequireContextModules = () =>\n    require.context('../../modules/', true, /index.js$/)\n\nexport const getStore = () => {\n    const { store } = require('../store')\n    return {\n        state: store.getState(),\n        dispatch: store.dispatch\n    }\n}\n","import { combineReducers } from 'redux'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst releaseBasedReducers = storeHelpers\n  .getAllModuleReducers(getRequireContextModules())\n\nexport default combineReducers({\n  firebase: firebaseReducer,\n  ...releaseBasedReducers\n})\n","import { all, spawn, call } from 'redux-saga/effects'\nimport { helpers as storeHelpers } from '../config'\nimport { getRequireContextModules } from './helpers'\nfunction * rootSaga () {\n  yield all(storeHelpers.getAllModuleSagas(getRequireContextModules()))\n  const sagas = storeHelpers\n    .getAllModuleSagas(getRequireContextModules())\n  /*\n   * Keeping the root alive\n   * ref: https://redux-saga.js.org/docs/advanced/RootSaga.html\n   */\n  const decentralizedSagas = sagas.map((saga) =>\n    spawn(function * () {\n      while (true) {\n        try {\n          yield call(saga)\n          break\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.log(e, 'Saga crash detected')\n        }\n      }\n    })\n  )\n  yield all(decentralizedSagas)\n}\nexport default rootSaga\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\nimport storage from 'redux-persist/lib/storage'\n\nexport default (rootReducer, mySaga, { reduxDevTools = false } = {}) => {\n    const sagaMiddleware = createSagaMiddleware()\n    const persistConfig = {\n        key: 'root',\n        storage,\n        whitelist: []\n    }\n    const persistedReducer = persistReducer(persistConfig, rootReducer)\n    const composeEnhancers =\n        (reduxDevTools && typeof window !== 'undefined' &&\n            (\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                    trace: true\n                })\n            )\n        ) || compose\n\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleware)))\n    const persistor = persistStore(store)\n    sagaMiddleware.run(mySaga)\n    return {\n        store,\n        persistor\n    }\n}\n","import { store as baseStore } from '../config'\nimport rootReducer from './reducers'\nimport sagas from './sagas'\n\nexport const { store, persistor } = baseStore(rootReducer, sagas, {\n  reduxDevTools: process.env.REDUX_DEVTOOLS\n})\n","import {constants} from '../index'\nimport {getAction as action} from '../../../helpers'\n\nexport const get = ({\n    request: () =>\n        action(constants.LIST_REQUESTED),\n    success: (response) =>\n        action(constants.LIST_SUCCEEDED, {response}),\n    failure: (response, message) =>\n        action(constants.LIST_FAILED, {\n            response,\n            message\n        })\n})\n\nexport const add = ({\n    request: (data) =>\n        action(constants.ADD_REQUESTED, {data}),\n    success: () =>\n        action(constants.ADD_SUCCEEDED),\n    failure: (response, message) =>\n        action(constants.ADD_FAILED, {\n            response,\n            message\n        })\n})\n","export const LIST_REQUESTED = 'MAIN/LIST_REQUESTED'\nexport const LIST_SUCCEEDED = 'MAIN/LIST_SUCCEEDED'\nexport const LIST_FAILED = 'MAIN/LIST_FAILED'\n\nexport const ADD_REQUESTED = 'MAIN/ADD_REQUESTED'\nexport const ADD_SUCCEEDED = 'MAIN/ADD_SUCCEEDED'\nexport const ADD_FAILED = 'MAIN/ADD_FAILED'\n","\nimport { createSelector } from 'reselect'\nimport { moduleName } from '../index'\n\n\nexport const selectList = createSelector(\n  (state) => state[moduleName],\n  (data) => data.list\n)\n"],"sourceRoot":""}